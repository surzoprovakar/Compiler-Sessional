Terminals unused in grammar

   WHITESPACE
   NEWLINE
   DO
   BREAK
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   CONTINUE


State 9 conflicts: 3 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: func_declaration global_var_declaration Program
    2      | global_var_declaration func_declaration Program
    3      | func_declaration Program
    4      | global_var_declaration Program
    5      | Program

    6 global_var_declaration: var_declaration

    7 func_declaration: type_specifier ID LPAREN Parameter_List RPAREN SEMICOLON
    8                 | VOID ID LPAREN Parameter_List RPAREN SEMICOLON

    9 Parameter_List: Parameter_List COMMA Parameter
   10               | Parameter

   11 Parameter: type_specifier ID
   12          | type_specifier ID LTHIRD CONST_INT RTHIRD
   13          | VOID

   14 Program: INT MAIN LPAREN RPAREN compound_statement

   15 compound_statement: LCURL var_declaration statements RCURL
   16                   | LCURL statements RCURL
   17                   | LCURL RCURL

   18 var_declaration: type_specifier declaration_list SEMICOLON
   19                | var_declaration type_specifier declaration_list SEMICOLON

   20 type_specifier: INT
   21               | FLOAT
   22               | CHAR

   23 declaration_list: declaration_list COMMA ID
   24                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   25                 | ID
   26                 | ID LTHIRD CONST_INT RTHIRD

   27 statements: statement
   28           | statements statement

   29 statement: expression_statement
   30          | compound_statement
   31          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   32          | IF LPAREN expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement ELSE statement
   34          | WHILE LPAREN expression RPAREN statement
   35          | PRINTLN LPAREN ID RPAREN SEMICOLON
   36          | RETURN expression SEMICOLON

   37 expression_statement: SEMICOLON
   38                     | expression SEMICOLON

   39 variable: ID
   40         | ID LTHIRD expression RTHIRD

   41 expression: logic_expression
   42           | variable ASSIGNOP logic_expression

   43 logic_expression: rel_expression
   44                 | rel_expression LOGICOP rel_expression

   45 rel_expression: simple_expression
   46               | simple_expression RELOP simple_expression

   47 simple_expression: term
   48                  | simple_expression ADDOP term

   49 term: unary_expression
   50     | term MULOP unary_expression

   51 unary_expression: ADDOP unary_expression
   52                 | NOT unary_expression
   53                 | factor

   54 factor: variable
   55       | LPAREN expression RPAREN
   56       | CONST_INT
   57       | CONST_FLOAT
   58       | CONST_CHAR
   59       | factor INCOP
   60       | factor DECOP


Terminals, with rules where they appear

$end (0) 0
error (256)
WHITESPACE (258)
NEWLINE (259)
IF (260) 32 33
ELSE (261) 33
FOR (262) 31
WHILE (263) 34
DO (264)
BREAK (265)
INT (266) 14 20
CHAR (267) 22
FLOAT (268) 21
DOUBLE (269)
MAIN (270) 14
VOID (271) 8 13
RETURN (272) 36
SWITCH (273)
CASE (274)
DEFAULT (275)
CONTINUE (276)
PRINTLN (277) 35
ADDOP (278) 48 51
MULOP (279) 50
INCOP (280) 59
DECOP (281) 60
RELOP (282) 46
ASSIGNOP (283) 42
LOGICOP (284) 44
NOT (285) 52
LPAREN (286) 7 8 14 31 32 33 34 35 55
RPAREN (287) 7 8 14 31 32 33 34 35 55
LCURL (288) 15 16 17
RCURL (289) 15 16 17
LTHIRD (290) 12 24 26 40
RTHIRD (291) 12 24 26 40
COMMA (292) 9 23 24
SEMICOLON (293) 7 8 18 19 35 36 37 38
CONST_INT (294) 12 24 26 56
CONST_FLOAT (295) 57
CONST_CHAR (296) 58
ID (297) 7 8 11 12 23 24 25 26 35 39 40
LOWER_THAN_ELSE (298)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
Start (45)
    on left: 1 2 3 4 5, on right: 0
global_var_declaration (46)
    on left: 6, on right: 1 2 4
func_declaration (47)
    on left: 7 8, on right: 1 2 3
Parameter_List (48)
    on left: 9 10, on right: 7 8 9
Parameter (49)
    on left: 11 12 13, on right: 9 10
Program (50)
    on left: 14, on right: 1 2 3 4 5
compound_statement (51)
    on left: 15 16 17, on right: 14 30
var_declaration (52)
    on left: 18 19, on right: 6 15 19
type_specifier (53)
    on left: 20 21 22, on right: 7 11 12 18 19
declaration_list (54)
    on left: 23 24 25 26, on right: 18 19 23 24
statements (55)
    on left: 27 28, on right: 15 16 28
statement (56)
    on left: 29 30 31 32 33 34 35 36, on right: 27 28 31 32 33 34
expression_statement (57)
    on left: 37 38, on right: 29 31
variable (58)
    on left: 39 40, on right: 42 54
expression (59)
    on left: 41 42, on right: 31 32 33 34 36 38 40 55
logic_expression (60)
    on left: 43 44, on right: 41 42
rel_expression (61)
    on left: 45 46, on right: 43 44
simple_expression (62)
    on left: 47 48, on right: 45 46 48
term (63)
    on left: 49 50, on right: 47 48 50
unary_expression (64)
    on left: 51 52 53, on right: 49 50 51 52
factor (65)
    on left: 54 55 56 57 58 59 60, on right: 53 59 60


state 0

    0 $accept: . Start $end

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    Start                   go to state 5
    global_var_declaration  go to state 6
    func_declaration        go to state 7
    Program                 go to state 8
    var_declaration         go to state 9
    type_specifier          go to state 10


state 1

   14 Program: INT . MAIN LPAREN RPAREN compound_statement
   20 type_specifier: INT .

    MAIN  shift, and go to state 11

    $default  reduce using rule 20 (type_specifier)


state 2

   22 type_specifier: CHAR .

    $default  reduce using rule 22 (type_specifier)


state 3

   21 type_specifier: FLOAT .

    $default  reduce using rule 21 (type_specifier)


state 4

    8 func_declaration: VOID . ID LPAREN Parameter_List RPAREN SEMICOLON

    ID  shift, and go to state 12


state 5

    0 $accept: Start . $end

    $end  shift, and go to state 13


state 6

    2 Start: global_var_declaration . func_declaration Program
    4      | global_var_declaration . Program

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    func_declaration  go to state 14
    Program           go to state 15
    type_specifier    go to state 16


state 7

    1 Start: func_declaration . global_var_declaration Program
    3      | func_declaration . Program

    INT    shift, and go to state 1
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    global_var_declaration  go to state 17
    Program                 go to state 18
    var_declaration         go to state 9
    type_specifier          go to state 19


state 8

    5 Start: Program .

    $default  reduce using rule 5 (Start)


state 9

    6 global_var_declaration: var_declaration .
   19 var_declaration: var_declaration . type_specifier declaration_list SEMICOLON

    INT    shift, and go to state 20
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3

    INT       [reduce using rule 6 (global_var_declaration)]
    CHAR      [reduce using rule 6 (global_var_declaration)]
    FLOAT     [reduce using rule 6 (global_var_declaration)]
    $default  reduce using rule 6 (global_var_declaration)

    type_specifier  go to state 21


state 10

    7 func_declaration: type_specifier . ID LPAREN Parameter_List RPAREN SEMICOLON
   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 22

    declaration_list  go to state 23


state 11

   14 Program: INT MAIN . LPAREN RPAREN compound_statement

    LPAREN  shift, and go to state 24


state 12

    8 func_declaration: VOID ID . LPAREN Parameter_List RPAREN SEMICOLON

    LPAREN  shift, and go to state 25


state 13

    0 $accept: Start $end .

    $default  accept


state 14

    2 Start: global_var_declaration func_declaration . Program

    INT  shift, and go to state 26

    Program  go to state 27


state 15

    4 Start: global_var_declaration Program .

    $default  reduce using rule 4 (Start)


state 16

    7 func_declaration: type_specifier . ID LPAREN Parameter_List RPAREN SEMICOLON

    ID  shift, and go to state 28


state 17

    1 Start: func_declaration global_var_declaration . Program

    INT  shift, and go to state 26

    Program  go to state 29


state 18

    3 Start: func_declaration Program .

    $default  reduce using rule 3 (Start)


state 19

   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 30

    declaration_list  go to state 23


state 20

   20 type_specifier: INT .

    $default  reduce using rule 20 (type_specifier)


state 21

   19 var_declaration: var_declaration type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 30

    declaration_list  go to state 31


state 22

    7 func_declaration: type_specifier ID . LPAREN Parameter_List RPAREN SEMICOLON
   25 declaration_list: ID .
   26                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 32
    LTHIRD  shift, and go to state 33

    $default  reduce using rule 25 (declaration_list)


state 23

   18 var_declaration: type_specifier declaration_list . SEMICOLON
   23 declaration_list: declaration_list . COMMA ID
   24                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 34
    SEMICOLON  shift, and go to state 35


state 24

   14 Program: INT MAIN LPAREN . RPAREN compound_statement

    RPAREN  shift, and go to state 36


state 25

    8 func_declaration: VOID ID LPAREN . Parameter_List RPAREN SEMICOLON

    INT    shift, and go to state 20
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 37

    Parameter_List  go to state 38
    Parameter       go to state 39
    type_specifier  go to state 40


state 26

   14 Program: INT . MAIN LPAREN RPAREN compound_statement

    MAIN  shift, and go to state 11


state 27

    2 Start: global_var_declaration func_declaration Program .

    $default  reduce using rule 2 (Start)


state 28

    7 func_declaration: type_specifier ID . LPAREN Parameter_List RPAREN SEMICOLON

    LPAREN  shift, and go to state 32


state 29

    1 Start: func_declaration global_var_declaration Program .

    $default  reduce using rule 1 (Start)


state 30

   25 declaration_list: ID .
   26                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 33

    $default  reduce using rule 25 (declaration_list)


state 31

   19 var_declaration: var_declaration type_specifier declaration_list . SEMICOLON
   23 declaration_list: declaration_list . COMMA ID
   24                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 34
    SEMICOLON  shift, and go to state 41


state 32

    7 func_declaration: type_specifier ID LPAREN . Parameter_List RPAREN SEMICOLON

    INT    shift, and go to state 20
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 37

    Parameter_List  go to state 42
    Parameter       go to state 39
    type_specifier  go to state 40


state 33

   26 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 43


state 34

   23 declaration_list: declaration_list COMMA . ID
   24                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 44


state 35

   18 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 18 (var_declaration)


state 36

   14 Program: INT MAIN LPAREN RPAREN . compound_statement

    LCURL  shift, and go to state 45

    compound_statement  go to state 46


state 37

   13 Parameter: VOID .

    $default  reduce using rule 13 (Parameter)


state 38

    8 func_declaration: VOID ID LPAREN Parameter_List . RPAREN SEMICOLON
    9 Parameter_List: Parameter_List . COMMA Parameter

    RPAREN  shift, and go to state 47
    COMMA   shift, and go to state 48


state 39

   10 Parameter_List: Parameter .

    $default  reduce using rule 10 (Parameter_List)


state 40

   11 Parameter: type_specifier . ID
   12          | type_specifier . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 49


state 41

   19 var_declaration: var_declaration type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 19 (var_declaration)


state 42

    7 func_declaration: type_specifier ID LPAREN Parameter_List . RPAREN SEMICOLON
    9 Parameter_List: Parameter_List . COMMA Parameter

    RPAREN  shift, and go to state 50
    COMMA   shift, and go to state 48


state 43

   26 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 51


state 44

   23 declaration_list: declaration_list COMMA ID .
   24                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 52

    $default  reduce using rule 23 (declaration_list)


state 45

   15 compound_statement: LCURL . var_declaration statements RCURL
   16                   | LCURL . statements RCURL
   17                   | LCURL . RCURL

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    INT          shift, and go to state 20
    CHAR         shift, and go to state 2
    FLOAT        shift, and go to state 3
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    RCURL        shift, and go to state 61
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    var_declaration       go to state 68
    type_specifier        go to state 19
    statements            go to state 69
    statement             go to state 70
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 46

   14 Program: INT MAIN LPAREN RPAREN compound_statement .

    $default  reduce using rule 14 (Program)


state 47

    8 func_declaration: VOID ID LPAREN Parameter_List RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 80


state 48

    9 Parameter_List: Parameter_List COMMA . Parameter

    INT    shift, and go to state 20
    CHAR   shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 37

    Parameter       go to state 81
    type_specifier  go to state 40


state 49

   11 Parameter: type_specifier ID .
   12          | type_specifier ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 82

    $default  reduce using rule 11 (Parameter)


state 50

    7 func_declaration: type_specifier ID LPAREN Parameter_List RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 83


state 51

   26 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


state 52

   24 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 84


state 53

   32 statement: IF . LPAREN expression RPAREN statement
   33          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 85


state 54

   31 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 86


state 55

   34 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 87


state 56

   36 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 72
    expression         go to state 88
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 57

   35 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 89


state 58

   51 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable          go to state 90
    unary_expression  go to state 91
    factor            go to state 79


state 59

   52 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable          go to state 90
    unary_expression  go to state 92
    factor            go to state 79


state 60

   55 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 72
    expression         go to state 93
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 61

   17 compound_statement: LCURL RCURL .

    $default  reduce using rule 17 (compound_statement)


state 62

   37 expression_statement: SEMICOLON .

    $default  reduce using rule 37 (expression_statement)


state 63

   56 factor: CONST_INT .

    $default  reduce using rule 56 (factor)


state 64

   57 factor: CONST_FLOAT .

    $default  reduce using rule 57 (factor)


state 65

   58 factor: CONST_CHAR .

    $default  reduce using rule 58 (factor)


state 66

   39 variable: ID .
   40         | ID . LTHIRD expression RTHIRD

    LTHIRD  shift, and go to state 94

    $default  reduce using rule 39 (variable)


state 67

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


state 68

   15 compound_statement: LCURL var_declaration . statements RCURL
   19 var_declaration: var_declaration . type_specifier declaration_list SEMICOLON

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    INT          shift, and go to state 20
    CHAR         shift, and go to state 2
    FLOAT        shift, and go to state 3
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    type_specifier        go to state 21
    statements            go to state 95
    statement             go to state 70
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 69

   16 compound_statement: LCURL statements . RCURL
   28 statements: statements . statement

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    RCURL        shift, and go to state 96
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    statement             go to state 97
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 70

   27 statements: statement .

    $default  reduce using rule 27 (statements)


state 71

   29 statement: expression_statement .

    $default  reduce using rule 29 (statement)


state 72

   42 expression: variable . ASSIGNOP logic_expression
   54 factor: variable .

    ASSIGNOP  shift, and go to state 98

    $default  reduce using rule 54 (factor)


state 73

   38 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 99


state 74

   41 expression: logic_expression .

    $default  reduce using rule 41 (expression)


state 75

   43 logic_expression: rel_expression .
   44                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 100

    $default  reduce using rule 43 (logic_expression)


state 76

   45 rel_expression: simple_expression .
   46               | simple_expression . RELOP simple_expression
   48 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 101
    RELOP  shift, and go to state 102

    $default  reduce using rule 45 (rel_expression)


state 77

   47 simple_expression: term .
   50 term: term . MULOP unary_expression

    MULOP  shift, and go to state 103

    $default  reduce using rule 47 (simple_expression)


state 78

   49 term: unary_expression .

    $default  reduce using rule 49 (term)


state 79

   53 unary_expression: factor .
   59 factor: factor . INCOP
   60       | factor . DECOP

    INCOP  shift, and go to state 104
    DECOP  shift, and go to state 105

    $default  reduce using rule 53 (unary_expression)


state 80

    8 func_declaration: VOID ID LPAREN Parameter_List RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


state 81

    9 Parameter_List: Parameter_List COMMA Parameter .

    $default  reduce using rule 9 (Parameter_List)


state 82

   12 Parameter: type_specifier ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 106


state 83

    7 func_declaration: type_specifier ID LPAREN Parameter_List RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


state 84

   24 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 107


state 85

   32 statement: IF LPAREN . expression RPAREN statement
   33          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 72
    expression         go to state 108
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 86

   31 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    expression_statement  go to state 109
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 87

   34 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 72
    expression         go to state 110
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 88

   36 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 111


state 89

   35 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 112


state 90

   54 factor: variable .

    $default  reduce using rule 54 (factor)


state 91

   51 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 51 (unary_expression)


state 92

   52 unary_expression: NOT unary_expression .

    $default  reduce using rule 52 (unary_expression)


state 93

   55 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 113


state 94

   40 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 72
    expression         go to state 114
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 95

   15 compound_statement: LCURL var_declaration statements . RCURL
   28 statements: statements . statement

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    RCURL        shift, and go to state 115
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    statement             go to state 97
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 96

   16 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 16 (compound_statement)


state 97

   28 statements: statements statement .

    $default  reduce using rule 28 (statements)


state 98

   42 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 90
    logic_expression   go to state 116
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 99

   38 expression_statement: expression SEMICOLON .

    $default  reduce using rule 38 (expression_statement)


state 100

   44 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 90
    rel_expression     go to state 117
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 101

   48 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable          go to state 90
    term              go to state 118
    unary_expression  go to state 78
    factor            go to state 79


state 102

   46 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 90
    simple_expression  go to state 119
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 103

   50 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable          go to state 90
    unary_expression  go to state 120
    factor            go to state 79


state 104

   59 factor: factor INCOP .

    $default  reduce using rule 59 (factor)


state 105

   60 factor: factor DECOP .

    $default  reduce using rule 60 (factor)


state 106

   12 Parameter: type_specifier ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 121


state 107

   24 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


state 108

   32 statement: IF LPAREN expression . RPAREN statement
   33          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 122


state 109

   31 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    expression_statement  go to state 123
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 110

   34 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 124


state 111

   36 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 36 (statement)


state 112

   35 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 125


state 113

   55 factor: LPAREN expression RPAREN .

    $default  reduce using rule 55 (factor)


state 114

   40 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 126


state 115

   15 compound_statement: LCURL var_declaration statements RCURL .

    $default  reduce using rule 15 (compound_statement)


state 116

   42 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 42 (expression)


state 117

   44 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 44 (logic_expression)


state 118

   48 simple_expression: simple_expression ADDOP term .
   50 term: term . MULOP unary_expression

    MULOP  shift, and go to state 103

    $default  reduce using rule 48 (simple_expression)


state 119

   46 rel_expression: simple_expression RELOP simple_expression .
   48 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 101

    $default  reduce using rule 46 (rel_expression)


state 120

   50 term: term MULOP unary_expression .

    $default  reduce using rule 50 (term)


state 121

   12 Parameter: type_specifier ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 12 (Parameter)


state 122

   32 statement: IF LPAREN expression RPAREN . statement
   33          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    statement             go to state 127
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 123

   31 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    variable           go to state 72
    expression         go to state 128
    logic_expression   go to state 74
    rel_expression     go to state 75
    simple_expression  go to state 76
    term               go to state 77
    unary_expression   go to state 78
    factor             go to state 79


state 124

   34 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    statement             go to state 129
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 125

   35 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 130


state 126

   40 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 40 (variable)


state 127

   32 statement: IF LPAREN expression RPAREN statement .
   33          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 131

    $default  reduce using rule 32 (statement)


state 128

   31 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 132


state 129

   34 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (statement)


state 130

   35 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 35 (statement)


state 131

   33 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    statement             go to state 133
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 132

   31 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 53
    FOR          shift, and go to state 54
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    PRINTLN      shift, and go to state 57
    ADDOP        shift, and go to state 58
    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 60
    LCURL        shift, and go to state 45
    SEMICOLON    shift, and go to state 62
    CONST_INT    shift, and go to state 63
    CONST_FLOAT  shift, and go to state 64
    CONST_CHAR   shift, and go to state 65
    ID           shift, and go to state 66

    compound_statement    go to state 67
    statement             go to state 134
    expression_statement  go to state 71
    variable              go to state 72
    expression            go to state 73
    logic_expression      go to state 74
    rel_expression        go to state 75
    simple_expression     go to state 76
    term                  go to state 77
    unary_expression      go to state 78
    factor                go to state 79


state 133

   33 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 33 (statement)


state 134

   31 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 31 (statement)
